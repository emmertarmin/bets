---
import { getFlag } from "@/utils";

const { gameID, gameStatus, teams, bets, betID, betPoints, results, gameDate } = Astro.props;
---

<div
    class={`game-card relative border border-slate-500 rounded-xl p-4 hover:transition-all ${gameStatus === 'FINISHED' ? 'bg-slate-800' : 'bg-slate-900 hover:border-purple-600'}`}
    id={`game-card-${gameID}`}
>
    {/* <p class="text-sm text-slate-300 text-center mb-2">match.type</p> */}
    <p class="text-sm text-slate-300 text-center mb-2">
        {new Date(gameDate).toLocaleString('de-DE')}
    </p>
    <div
        class="game text-center text-sm text-slate-300 mb-2"
        data-date={gameDate}
    >
    </div>
    {
        !betID && (
            <form
                hx-post={`/partials/games/${gameID}`}
                hx-target={`#game-card-${gameID}`}
                hx-swap="outerHTML"
                data-game-id={gameID}
                data-bet-id={betID}
            >
                <input type="hidden" name="gameID" value={gameID} />
                <input type="hidden" name="teams" value={teams} />
                <input type="hidden" name="bets" value={bets} />
                <input type="hidden" name="bets" value={bets} />
                <input type="hidden" name="betID" value={betID} />
                <input type="hidden" name="results" value={results} />
                <input type="hidden" name="gameDate" value={gameDate} />
                <div class="flex items-center">
                    <div class="mr-4 text-center">
                      <span class="flag">{getFlag(teams.split(':')[0] || '')}</span>
                      <br/>
                      {(teams.split(':')[0] || '').toUpperCase()}
                      </div>
                    <div>
                        <input
                            type="number"
                            class="text-4xl text-center w-full"
                            name="team_1_score_bet"
                            value={bets?.split(":")[0] || ""}
                            disabled={gameStatus === 'FINISHED'}
                            min="0" max="99"
                        />
                    </div>
                    <div class="px-3">:</div>
                    <div>
                        <input
                            type="number"
                            class="text-4xl text-center w-full"
                            name="team_2_score_bet"
                            value={bets?.split(":")[1] || ""}
                            disabled={gameStatus === 'FINISHED'}
                            min="0" max="99"
                        />
                    </div>
                    <div class="ml-4 text-center">
                      <span class="flag">{getFlag(teams.split(':')[1] || '')}</span>
                      <br/>
                      {(teams.split(':')[1] || '').toUpperCase()}
                    </div>
                </div>
                <input type="hidden" name="gameID" value={gameID} />
                <div
                    id={`bet-create-form-${gameID}-result`}
                    class="absolute left-3 bottom-3"
                ></div>
                <button
                    type="submit"
                    class="opacity-0 transition-opacity absolute right-3 bottom-3 rounded-full w-10 h-10 bg-purple-900 text-white px-4 py-2 flex items-center justify-center"
                >
                    &check;
                </button>
            </form>
        )
    }
    {
        betID && (
            <form
                hx-post={`/partials/games/${gameID}`}
                hx-target={`#game-card-${gameID}`}
                hx-swap="outerHTML"
                data-game-id={gameID}
                data-bet-id={betID}
            >
                <input type="hidden" name="gameID" value={gameID} />
                <input type="hidden" name="teams" value={teams} />
                <input type="hidden" name="bets" value={bets} />
                <input type="hidden" name="bets" value={bets} />
                <input type="hidden" name="betID" value={betID} />
                <input type="hidden" name="results" value={results} />
                <input type="hidden" name="gameDate" value={gameDate} />
                <div class="flex items-center">
                    <div class="mr-4 text-center">
                      <span class="flag">{getFlag(teams.split(':')[0] || '')}</span>
                      <br/>
                      {(teams.split(':')[0] || '').toUpperCase()}
                    </div>
                    <div>
                        <input
                            type="number"
                            class="text-4xl text-center w-full"
                            name="team_1_score_bet"
                            value={bets?.split(':')[0] || ''}
                            disabled={gameStatus === 'FINISHED'}
                            min="0" max="99"
                        />
                    </div>
                    <div class="px-3">:</div>
                    <div>
                        <input
                            type="number"
                            class="text-4xl text-center w-full"
                            name="team_2_score_bet"
                            value={bets?.split(':')[1] || ''}
                            disabled={gameStatus === 'FINISHED'}
                            min="0" max="99"
                        />
                    </div>
                    <div class="ml-4 text-center">
                      <span class="flag">{getFlag(teams.split(':')[1] || '')}</span>
                      <br/>
                      {(teams.split(':')[1] || '').toUpperCase()}
                    </div>
                </div>
                <input type="hidden" name="gameID" value={gameID} />
                <input type="hidden" name="betID" value={betID} />
                <div
                    id={`bet-update-form-${gameID}-result`}
                    class="absolute left-3 bottom-3"
                />
                <button
                    type="submit"
                    class="opacity-0 transition-opacity absolute right-3 bottom-3 rounded-full w-10 h-10 bg-purple-900 text-white px-4 py-2 flex items-center justify-center"
                >
                    &check;
                </button>
            </form>
        )
    }
    {
        gameStatus === 'FINISHED' ? (
            <div class="flex items-center justify-center mt-4">
                <>
                    <div class="text-2xl px-3">{results.split(':')[0]}</div>
                    <div class="px-3">:</div>
                    <div class="text-2xl px-3">{results.split(':')[1]}</div>
                </>
            </div>
        ) : (
            <div class="h-8 mt-4" />
        )
    }
    { 
        gameStatus === 'FINISHED' && (
        <div class="absolute bottom-3 left-3 text-2xl bg-purple-900 rounded-full w-10 h-10 flex items-center justify-center">
            {betPoints}
        </div>
    )}
</div>

<style>
    .flag {
        @apply text-3xl filter saturate-50 transition-all;
    }
    .game-card:hover .flag {
        @apply filter saturate-100;
    }
    /* hide number arrows */
    /* Chrome, Safari, Edge, Opera */
    input::-webkit-outer-spin-button,
    input::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }
    /* Firefox */
    input[type=number] {
        -moz-appearance: textfield;
    }
</style>

<script>
    // Show submit button when input is changed
    const inputs = document.querySelectorAll('input[name=team_1_score_bet],input[name=team_2_score_bet]')
    inputs.forEach((input) => {
        input.addEventListener('input', (e) => {
            const form = (e?.target as HTMLElement)?.closest('form')
            if (form) {
                const submitButton = form.querySelector('button[type=submit')
                submitButton?.classList.remove('opacity-0')
            }
        })
    })
</script>