---
import Layout from "@/layouts/Layout.astro"
import { pbGET } from "@/services/pocketbase"
import GameCard from "@/components/GameCard.astro"

const pbToken = Astro.cookies.get('pbToken')?.value
const cookieParams = new URLSearchParams(Astro.cookies.get("pbToken")?.value)
const userId = cookieParams.get("user")

const userData = await pbGET(
  `/api/collections/users/records/${userId}`, {}, Astro.cookies.get("pbToken")?.value,
).then((res) => res.data)

const games = await pbGET('/api/collections/games/records', {
  sort: 'date',
  expand: 'team_1,team_2',
  perPage: 100
}, pbToken)
  .then(res => res.data.items)

const bets = await pbGET('/api/collections/bets/records', {
  filter: `user="${userData.id}"`
}, pbToken)
  .then(res => res.data.items)
---

<Layout title="Games">
  <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-5 lg:gap-8 px-5 lg:px-8">
    {games.filter((game: any) => game.expand?.team_1.name && game.expand?.team_2.name).map((game: any) => {
      const bet = bets.find((bet: any) => bet.game === game.id)
      return (
        <GameCard
          gameID={game.id}
          gameStatus={game.status}
          teams={`${game.expand?.team_1.country_code_3}:${game.expand?.team_2.country_code_3}`}
          bets={`${bet?.team_1_score_bet}:${bet?.team_2_score_bet}`}
          betID={bet?.id}
          betPoints={bet?.points}
          results={`${game.team_1_score}:${game.team_2_score}`}
          gameDate={new Date(game.date).toISOString()}
        />
    )
    })}
  </div>
  <!-- <pre>{JSON.stringify(userData, null, 2)}</pre> -->
  <!-- <pre>{JSON.stringify(games, null, 2)}</pre> -->
  <!-- <pre>{JSON.stringify(bets, null, 2)}</pre> -->
</Layout>
