---
import { pb } from '@/services/pocketbase';

interface Props {
	title: string;
}

const { title } = Astro.props;

const isLoggedIn = pb.authStore.isValid;

---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body>
    <nav>
      <ul>
        <li><a href="/">Home</a></li>
        <li><a href="/games">Games</a></li>
        <li><a href="/groups">Groups</a></li>
        <li><a href="/teams">Teams</a></li>
        {(!isLoggedIn) && (
          <li><a href="/auth/login">Log in</a></li>
        )}
        {(isLoggedIn) && (
          <li><a href="/auth/account">Account</a></li>
        )}
      </ul>
    </nav>
		<slot />
	</body>
</html>
<style is:global>
	:root {
		--accent: 136, 58, 234;
		--accent-light: 224, 204, 250;
		--accent-dark: 49, 10, 101;
		--accent-gradient: linear-gradient(
			45deg,
			rgb(var(--accent)),
			rgb(var(--accent-light)) 30%,
			white 60%
		);
    --background: #13151a;
    --background-light: #1e2025;
	}
	html {
		font-family: system-ui, sans-serif;
		background: var(--background);
		background-size: 224px;
    color: white;
	}
	code {
		font-family:
			Menlo,
			Monaco,
			Lucida Console,
			Liberation Mono,
			DejaVu Sans Mono,
			Bitstream Vera Sans Mono,
			Courier New,
			monospace;
	}
  nav {
    padding: 1rem;
    ul {
      display: flex;
      gap: 1rem;
      list-style: none;
      padding: 0;
      margin: 0;
    }
  }
  a {
    text-decoration: underline;
    color: rgb(var(--accent-light));
    &:hover {
      text-decoration: none;
    }
  }
  blockquote {
    background: var(--background-light);
    padding: 1rem;
    border-left: 0.25rem solid rgb(var(--accent));
    margin: 1rem 0;
  }
  details {
    margin: 1rem 0;
    padding: 1rem;
    background: var(--background-light);
    border-radius: 0.5rem;
  }
  summary {
    cursor: pointer;
    user-select: none;
  }
</style>

<script is:inline>
document.body.addEventListener('htmx:beforeOnLoad', function (evt) {
  if (evt.detail.xhr.status === 400) {
    // allow 400 responses to swap as we are using this as a signal that
    // a form was submitted with bad data and want to rerender with the
    // error messages
    evt.detail.shouldSwap = true;
    evt.detail.isError = false;
    }
  });
</script>